from dash import Dash, dcc, html, Input, Output
import plotly.express as px
import seaborn as sns

# Load the tips dataset from seaborn
tips_df = sns.load_dataset("tips")

app = Dash(__name__)

# Define the layout of the app
app.layout = html.Div(
    children=[
        dcc.RangeSlider(
            id='rs1',
            min=tips_df['total_bill'].min(),
            max=tips_df['total_bill'].max(),
            value=[tips_df['total_bill'].min(), tips_df['total_bill'].max()],
            marks={i: str(i) for i in range(int(tips_df['total_bill'].min()), int(tips_df['total_bill'].max()) + 1, 10)},  # Add marks for better visibility
            step=1  # You can adjust the step value as needed
        ),
        dcc.Graph(id='scatterplot1', style={'width': '100%'})
    ]
)

@app.callback(Output('scatterplot1', 'figure'), Input('rs1', 'value'))
def update_figure(selected_range):
    filtered_df = tips_df[(tips_df['total_bill'] >= selected_range[0]) & (tips_df['total_bill'] <= selected_range[1])]
    fig = px.scatter(filtered_df, x='total_bill', y='tip', title='Scatter Plot of Total Bill vs Tip')
    fig.update_layout(transition_duration=500)
    return fig

if __name__ == '__main__':
    app.run(debug=True)
